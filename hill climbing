from sys import maxsize
from itertools import permutations

V = 4  # Number of vertices

def travelling_salesman_problem(graph, s):

    vertex = []
    for i in range(V):
        if i != s:
            vertex.append(i)
   
    min_path = maxsize
    
    next_permutation = permutations(vertex)
    
    for i in next_permutation:
        current_path_weight = 0
        k = s
        
   
        for j in i:
            current_path_weight += graph[k][j]
            k = j
        
        current_path_weight += graph[k][s]
        
        min_path = min(min_path, current_path_weight)
    
    return min_path
if _name_ == "_main_":
    graph = [
        [0, 10, 15, 20],
        [10, 0, 35, 25],
        [15, 35, 0, 30],
        [20, 25, 30, 0]
    ]
    
    s = 0  
    print("Minimum cost of Travelling Salesman Problem:", travelling_salesman_problem(graph,Â s))
